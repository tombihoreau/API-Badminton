openapi: 3.0.0
info:
  title: API Badminton
  version: 1.0.0
  description: API RESTful pour la gestion des terrains de badminton.

servers:
  - url: http://localhost:3000
    description: Serveur local

paths:
  /users/register:
    post:
      summary: Inscription d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: Utilisateur créé
        '400':
          description: Erreur de validation

  /users/login:
    post:
      summary: Authentification d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Authentification réussie, token retourné
        '401':
          description: Identifiants invalides

  /courts:
    get:
      summary: Obtenir la disponibilité des terrains
      parameters:
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Date recherchée
        - name: time_slot
          in: query
          required: false
          schema:
            type: string
          description: Plage horaire recherchée
      responses:
        '200':
          description: Liste des terrains disponibles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    status:
                      type: string

  /courts/{id}:
    patch:
      summary: Mettre à jour l'état d'un terrain (admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [available, unavailable]
              required:
                - status
      responses:
        '200':
          description: Terrain mis à jour
        '403':
          description: Accès interdit (non-admin)
        '404':
          description: Terrain non trouvé

  /reservations:
    post:
      summary: Créer une réservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                court_id:
                  type: integer
                user_id:
                  type: integer
                date:
                  type: string
                  format: date
                time_slot:
                  type: string
              required:
                - court_id
                - user_id
                - date
                - time_slot
      responses:
        '201':
          description: Réservation créée
        '400':
          description: Erreur de validation
        '409':
          description: Terrain déjà réservé

    get:
      summary: Lister les réservations d'un utilisateur
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de l'utilisateur
      responses:
        '200':
          description: Liste des réservations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    court_id:
                      type: integer
                    date:
                      type: string
                    time_slot:
                      type: string

  /reservations/{id}:
    delete:
      summary: Supprimer une réservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Réservation supprimée
        '404':
          description: Réservation non trouvée
